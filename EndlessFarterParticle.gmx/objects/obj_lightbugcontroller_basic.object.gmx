<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
particle_max=13 //DO NOT touch.
max_phrase=3 //TPYE maximum word length.
message="ABC DEF GHI JKL M " //TYPE your message hear. End with a space. PLEASE type in all-Caps
position=1 //SPECIFY starting position, usually 1 is fine.
maxposition=string_length(message)
//Now, write a system to decipher this message.
//We need to create the appropriate number of dots. We may as well start with the maximum number needed, which is for the figure 8.
//For that, we need 13. ---/-_-/---/-_-/---.
// this code actually makes an extra, which is ok.
//We need code to decipher what the biggest phrase length is. That shouldn't be so bad.
//We just re-use old code here.
for (i=particle_max*max_phrase; i&gt;=0; i-=1)
{
lightarray[i]=instance_create(x+10,y+20,obj_lightbug)
lightarray[i].state=0
lightarray[i].maxphrase=max_phrase
}
alarm[0]=120
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=particle_max*max_phrase; i&gt;=0; i-=1)
{
lightarray[i].state=0
lightarray[i].alpha=1
}
alarm[0]=120
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (i=particle_max*phrase_length; i&gt;=0; i-=1)
{
if lightarray[i].state==1
{
lightarray[i].x=10*xplace[i]+x+40*floor(i/particle_max)-20*phrase_length
lightarray[i].y=10*yplace[i]+y
lightarray[i].state=2
}
}
alarm[2]=80
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//We need to take the length reader from the script and use it here, I think.
var key, firstpos, newpos, tempposition,i, j;
for (i=particle_max*max_phrase; i&gt;=0; i-=1)
{
lightarray[i].state=0
lightarray[i].alpha=0
}
phrase_length=0
while phrase_length=0
{
tempposition=position
key=string_char_at(message,tempposition)
while key==" " &amp;&amp; tempposition&lt;string_length(message)
{
tempposition+=1
key=string_char_at(message,tempposition)
} //check firstly if we're dealing with the appropriate start; ie. not a space.
firstpos=tempposition
while key!=" " &amp;&amp; tempposition&lt;string_length(message)
{
tempposition+=1
key=string_char_at(message,tempposition)
}
newpos=tempposition //now check where the end of the phrase is, starting one from where we first began.
phrase_length=newpos-firstpos
if phrase_length==0
position=1 //we assume that we are at the end of the line and restart. Hopefully it works.
}
//Now with firstpos and newpos, we see the length of the phrase.
//This next loop we need to repeat for as long as the phrase length. So we initiate a variable j

//The above script reads only for one letter.
//We'll fix it later to read from any position and to automatically move forward to past next space.
for (j=0; j&lt;phrase_length; j+=1)
{
script_execute(script0,message,firstpos+j,j)
for (i=particle_max*(j+1); i&gt;=0+particle_max*j; i-=1)
{
lightarray[i].state=1
lightarray[i].dir=point_direction(lightarray[i].x,lightarray[i].y,10*xplace[i]+x+40*j-20*phrase_length,10*yplace[i]+y)
lightarray[i].dis=point_distance(lightarray[i].x,lightarray[i].y,10*xplace[i]+x+40*j-20*phrase_length,10*yplace[i]+y)
lightarray[i].alpha=1
if xplace[i]==-1 &amp;&amp; yplace[i]==-1
{
lightarray[i].state=0
lightarray[i].alpha=0
}
}
}
alarm[1]=40
position=newpos

//We need to translate whatever character of the string we're at into a point.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
